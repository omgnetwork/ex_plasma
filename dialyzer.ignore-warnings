:0: Unknown function 'Elixir.ABI':encode/2
:0: Unknown function 'Elixir.ABI.TypeDecoder':decode_raw/2
:0: Unknown function 'Elixir.ABI.TypeEncoder':encode_raw/2
:0: Unknown function 'Elixir.ExPlasma.TypedData.Atom':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.BitString':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.Float':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.Function':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.Integer':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.List':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.Map':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.PID':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.Port':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.Reference':'__impl__'/1
:0: Unknown function 'Elixir.ExPlasma.TypedData.Tuple':'__impl__'/1
:0: Unknown function 'Elixir.ExRLP':decode/1
:0: Unknown function 'Elixir.ExRLP.Encode':encode/1
:0: Unknown function 'Elixir.ExthCrypto.Hash':hash/2
:0: Unknown function 'Elixir.ExthCrypto.Hash':kec/0
:0: Unknown function 'Elixir.MerkleTree':build/2
:0: Unknown function 'Elixir.MerkleTree':fast_root/2
:0: Unknown function 'Elixir.MerkleTree.Proof':prove/2
:0: Unknown function libsecp256k1:ecdsa_sign_compact/4
lib/ex_plasma/client/state.ex:23: Function authority/0 has no local return
lib/ex_plasma/client/state.ex:24: The call 'Elixir.ExPlasma.Client.State':eth_call(#{#<97>(8, 1, 'integer', ['unsigned', 'big']), #<117>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<104>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<40>(8, 1, 'integer', ['unsigned', 'big']), #<41>(8, 1, 'integer', ['unsigned', 'big'])}#,[],fun((_) -> any())) will never return since the success typing is (<<_:64,_:_*8>>,[any(),...],fun((_) -> any())) -> any() and the contract is ('Elixir.String':t(),nonempty_maybe_improper_list(),fun()) -> tuple()
lib/ex_plasma/client/state.ex:32: The specification for 'Elixir.ExPlasma.Client.State':next_child_block/0 states that the function might also return tuple() but the inferred return is none()
lib/ex_plasma/client/state.ex:33: Function next_child_block/0 has no local return
lib/ex_plasma/client/state.ex:34: The call 'Elixir.ExPlasma.Client.State':eth_call(#{#<110>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<120>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<67>(8, 1, 'integer', ['unsigned', 'big']), #<104>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<108>(8, 1, 'integer', ['unsigned', 'big']), #<100>(8, 1, 'integer', ['unsigned', 'big']), #<66>(8, 1, 'integer', ['unsigned', 'big']), #<108>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<107>(8, 1, 'integer', ['unsigned', 'big']), #<40>(8, 1, 'integer', ['unsigned', 'big']), #<41>(8, 1, 'integer', ['unsigned', 'big'])}#,[],fun((_) -> any())) will never return since the success typing is (<<_:64,_:_*8>>,[any(),...],fun((_) -> any())) -> any() and the contract is ('Elixir.String':t(),nonempty_maybe_improper_list(),fun()) -> tuple()
lib/ex_plasma/client/state.ex:43: The specification for 'Elixir.ExPlasma.Client.State':child_block_interval/0 states that the function might also return tuple() but the inferred return is none()
lib/ex_plasma/client/state.ex:44: Function child_block_interval/0 has no local return
lib/ex_plasma/client/state.ex:45: The call 'Elixir.ExPlasma.Client.State':eth_call(#{#<99>(8, 1, 'integer', ['unsigned', 'big']), #<104>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<108>(8, 1, 'integer', ['unsigned', 'big']), #<100>(8, 1, 'integer', ['unsigned', 'big']), #<66>(8, 1, 'integer', ['unsigned', 'big']), #<108>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<107>(8, 1, 'integer', ['unsigned', 'big']), #<73>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<108>(8, 1, 'integer', ['unsigned', 'big']), #<40>(8, 1, 'integer', ['unsigned', 'big']), #<41>(8, 1, 'integer', ['unsigned', 'big'])}#,[],fun((_) -> any())) will never return since the success typing is (<<_:64,_:_*8>>,[any(),...],fun((_) -> any())) -> any() and the contract is ('Elixir.String':t(),nonempty_maybe_improper_list(),fun()) -> tuple()
lib/ex_plasma/client/state.ex:70: Function standard_exit_bond_size/0 has no local return
lib/ex_plasma/client/state.ex:71: The call 'Elixir.ExPlasma.Client.State':eth_call(#{#<115>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<83>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<100>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<100>(8, 1, 'integer', ['unsigned', 'big']), #<69>(8, 1, 'integer', ['unsigned', 'big']), #<120>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<66>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<100>(8, 1, 'integer', ['unsigned', 'big']), #<83>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<122>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<40>(8, 1, 'integer', ['unsigned', 'big']), #<41>(8, 1, 'integer', ['unsigned', 'big'])}#,[],[{'to',binary()},...],fun((_) -> any())) will never return since it differs in the 2nd argument from the success typing arguments: (<<_:64,_:_*8>>,[any(),...],[{'to','nil' | binary()},...],fun((_) -> any()))
lib/ex_plasma/client/state.ex:110: The specification for 'Elixir.ExPlasma.Client.State':next_deposit_block/0 states that the function might also return tuple() but the inferred return is none()
lib/ex_plasma/client/state.ex:111: Function next_deposit_block/0 has no local return
lib/ex_plasma/client/state.ex:112: The call 'Elixir.ExPlasma.Client.State':eth_call(#{#<110>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<120>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<68>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<112>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<66>(8, 1, 'integer', ['unsigned', 'big']), #<108>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<107>(8, 1, 'integer', ['unsigned', 'big']), #<40>(8, 1, 'integer', ['unsigned', 'big']), #<41>(8, 1, 'integer', ['unsigned', 'big'])}#,[],fun((_) -> any())) will never return since the success typing is (<<_:64,_:_*8>>,[any(),...],fun((_) -> any())) -> any() and the contract is ('Elixir.String':t(),nonempty_maybe_improper_list(),fun()) -> tuple()
